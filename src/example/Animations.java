/*
 * Main.java
 *
 * Created on 01.05.2012, 11:48:42
 */
package example;
 
import java.applet.Applet;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
 
/**
 *
 * @author M128K145
 */
public class Animations extends Applet {
 
    /** The width. */
    private int width;
    /** The height. */
    private int height;
    /** The location. */
    private Point location = new Point(0, 0);
    /** The size. */
    private int size = 10;
    /** The direction. */
    private int direction = 3;
 
    /** Initializes the applet Main */
    public void init() {
        width = getSize().width;
        height = getSize().height;
        setBackground(Color.LIGHT_GRAY);
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
 
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
 
    /**
     * Paint.
     * 
     * @param g
     *           the g
     * @see java.awt.Container#paint(java.awt.Graphics)
     */
    public void paint(Graphics g) {
        g.setColor(Color.BLACK);
        if (location.x == 0) {
            direction ^= 1;
            ++location.x;
        } else if (location.x + size == width) {
            direction ^= 1;
            --location.x;
        } else if (location.x + size < width && (direction & 1) == 1) {
            ++location.x;
        } else if (location.x + size < width && (direction & 1) != 1) {
            --location.x;
        }
 
        if (location.y == 0) {
            direction ^= 2;
            ++location.y;
        } else if (location.y + size == height) {
            direction ^= 2;
            --location.y;
        } else if (location.y + size < height && (direction >> 1 & 1) == 1) {
            ++location.y;
        } else if (location.y + size < height && (direction >> 1 & 1) != 1) {
            --location.y;
        }
        g.drawOval(location.x, location.y, size, size);
        try {
            Thread.sleep(10);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
 
        this.repaint();
    }
 
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
 
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>
    // Variables declaration - do not modify
    // End of variables declaration
}/*
 * Main.java
 *
 * Created on 01.05.2012, 11:48:42
 */
